`configure' configures nagios-plugins 2.0.3 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local/nagios]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/nagios/bin', `/usr/local/nagios/lib' etc.  You can specify
an installation prefix other than `/usr/local/nagios' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/nagios-plugins]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --disable-maintainer-mode  disable make rules and dependencies not useful
			  (and sometimes confusing) to the casual installer
  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors
  --disable-largefile     omit support for large files
  --enable-threads={posix|solaris|pth|windows}
                          specify multithreading API
  --disable-threads       build without multithread safety
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-static[=PKGS]  build static libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --enable-libtap         Enable built-in libtap for unit-testing (default:
                          autodetect system library).
  --enable-extra-opts     Enables parsing of plugins ini config files for
                          extra options (default: no)
  --disable-nls           do not use Native Language Support
  --disable-rpath         do not hardcode runtime library paths
  --enable-redhat-pthread-workaround
                          force Redhat patch to be applied (default: test
                          system)
  --enable-perl-modules   Enables installation of Nagios::Plugin and its
                          dependencies (default: no)

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-nagios-user=USER Installs executables with this user. Defaults to install user
  --with-nagios-group=GROUP Installs executables with this group. Defaults to install user
  --without-world-permissions Installs executables without world permissions
  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use
                          both]
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot=DIR Search for dependent libraries within DIR
                        (or the compiler's sysroot if not specified).
  --with-cgiurl=DIR       sets URL for cgi programs
  --with-trusted-path=PATH sets trusted path for executables called by scripts (default=/bin:/sbin:/usr/bin:/usr/sbin)
  --with-perl=PATH        sets path to perl executable
  --with-openssl=DIR      path to openssl installation
  --with-gnutls=PATH      path to gnutls installation root
  --with-pgsql=DIR        sets path to pgsql installation
  --without-dbi           Skips the dbi plugin
  --without-radius        Skips the radius plugin
  --without-ldap          Skips the LDAP plugin
  --with-mysql=DIR        Locates mysql libraries. Expects
                          DIR/bin/mysql_config. Default to search for
                          mysql_config in PATH
  --with-ipv6             support IPv6 [default=check]
  --with-ps-command=PATH  Verbatim command to execute for ps
  --with-ps-format=FORMAT Format string for scanning ps output
  --with-ps-cols=NUM      Number of columns in ps command
  --with-ps-varlist=LIST  Variable list for sscanf of 'ps' output
  --with-ping-command=SYNTAX sets syntax for ICMP ping
  --with-ping6-command=SYNTAX sets syntax for ICMPv6 ping
  --with-nslookup-command=PATH sets path to nslookup executable
  --with-uptime-command=PATH sets path to uptime
  --with-rpcinfo-command=PATH sets path to rpcinfo
  --with-smbclient-command=PATH sets path to smbclient
  --with-snmpget-command=PATH Path to snmpget command
  --with-snmpgetnext-command=PATH Path to snmpgetnext command
  --with-qstat-command=PATH Path to qstat command
  --with-fping-command=PATH Path to fping command
  --with-fping6-command=PATH Path to fping6 command
  --with-ssh-command=PATH sets path for ssh
  --with-mailq-command=PATH sets path to mailq
  --with-qmail-qstat-command=PATH sets path to qmail-qstat
  --with-proc-meminfo=PATH path to /proc/meminfo or equivalent
  --with-dig-command=PATH Path to dig command
  --with-apt-get-command=PATH Path to apt-get command
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib
  --without-libiconv-prefix     don't search for libiconv in includedir and libdir
  --with-libintl-prefix[=DIR]  search for libintl in DIR/include and DIR/lib
  --without-libintl-prefix     don't search for libintl in includedir and libdir
  --with-libpth-prefix[=DIR]  search for libpth in DIR/include and DIR/lib
  --without-libpth-prefix     don't search for libpth in includedir and libdir
  --without-included-regex
                          don't compile regex; this is the default on systems
                          with recent-enough versions of the GNU C Library
                          (use with caution on other systems).

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    C/C++/Objective C preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

